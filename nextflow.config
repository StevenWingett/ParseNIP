// General description
manifest {
    name            = 'Parse Nextflow-Integrated Pipeline - ParseNIP'
    author          = """Steven W Wingett"""
    homePage        = 'https://github.com/StevenWingett/ParseNIP'
    description     = """Nextflow pipeline for mapping Parse Evercode datasets with split-pipe"""
    mainScript      = 'main.nf'
    version = '0.0.3'
}

params {
    config_profile_description = 'The MRC-LMB cluster settings for the Parse Evercode pipeline in Nextflow'
    config_profile_contact = 'Steven W Wingett'
    config_profile_url = 'https://www2.mrc-lmb.cam.ac.uk/'
    params.outdir = "results"
}


// Will always use containers
apptainer {
    enabled = true
    autoMounts = true
}


//  Containers to use for each process
process {

    withName:FASTQC {
        container = '/public/singularity/containers/nextflow/fastqc_0.12.1--104d26ddd9519960.sif'
        memory = 50.GB
        cpus = 16
    }

    withName:TRIMGALORE_TRIM {
        container = '/public/singularity/containers/nextflow/trim-galore_0.6.10--bc38c9238980c80e.sif'
        memory = 50.GB
        cpus = 15
    }

    withName:SPLITPIPE_INDEX {
        container = 'pbp_v0.2.sif'
        memory = 400.GB
        cpus = 16
    }

    withName:SPLITPIPE_MAP {
        container = 'pbp_v0.2.sif'
        memory = 400.GB
        cpus = 32
    }

    withName:SPLITPIPE_QC {     // This container is used, since it is used already for the mapping, but only basic functionality is required
        container = 'oras://community.wave.seqera.io/library/pip_igraph_leidenalg_scanpy:ae205e6e609e6292'
        memory = 50.GB
        cpus = 4
    }

    withName:SPLITPIPE_COMBINE {
        container = 'pbp_v0.2.sif'
        memory = 200.GB
        cpus = 16
    }

    withName:MULTIQC {
        container = 'oras://community.wave.seqera.io/library/pip_multiqc:291dd18ee0fe423c'
        memory = 100.GB
        cpus = 16
    }

    withName:SCANPY_SINGLECELLQC {
        container = 'oras://community.wave.seqera.io/library/pip_igraph_leidenalg_scanpy:ae205e6e609e6292'
        memory = 200.GB
        cpus = 16
    }

    withName:SEURAT_BUILDSEURATOBJECT {
        container = 'satijalab/seurat:5.0.0'   // Build a Singularity container from a DockerHub image
        memory = 200.GB
        cpus = 16
    }

    withName:CHECK_SETUP_BUILD_INDEX {    // This container is used, since it is used already for the mapping, but only basic functionality is required
        container = 'pbp_v0.2.sif'
        memory = 10.GB
        cpus = 1
    }

    withName:CHECK_SETUP_PREBUILT_INDEX {    // This container is used, since it is used already for the mapping, but only basic functionality is required
        container = 'pbp_v0.2.sif'
        memory = 10.GB
        cpus = 1
    }

    withName:CHECK_SETUP_DUMMY_RUN {    // This container is used, since it is used already for the mapping, but only basic functionality is required
        container = 'pbp_v0.2.sif'
        memory = 10.GB
        cpus = 1
    }
}


// Set up to allow Numba to work and Matplotlib to work efficiently
workDir = './work'
env {
    NUMBA_CACHE_DIR = "numba-cache"
    MPLCONFIGDIR = "mpl-config"
}


profiles {
    lmb_cluster {
        process.executor = 'slurm'    

        apptainer {
            cacheDir = '/public/singularity/containers/nextflow'
        }

        params {   // Maximum capabilities of cluster
            max_memory = 700.GB
            max_cpus = 112
            max_time = '168.h'
        }

        executor {
            queueSize         = '100'
            pollInterval      = '3 min'
            queueStatInterval = '5 min'
            submitRateLimit   = '50sec'
            exitReadTimeout   = '5 min'
        }

        errorStrategy = {
            sleep( Math.pow( 2, task.attempt ) * 150 as long )
            return 'retry'
        }

        maxRetries = 3

        timeline {
            enabled = true
            file = "execution_timeline.html"
        }

        report {
            enabled = true
            file = "execution_report.html"
        }

        trace {
            enabled = true
            file = "execution_trace.txt"
        }

        dag {
            enabled = true
            file = "pipeline_dag.svg"
        }

        notification {
            enabled = true
            to = "${USER}@mrc-lmb.cam.ac.uk"
        }

        cleanup = true
    }

    lmb_testing {
        process.executor = 'local' 

        apptainer {
            cacheDir = '/public/singularity/containers/nextflow'
        }

        params {   // Maximum capabilities of cluster
            max_memory = 50.GB
            max_cpus = 12
            max_time = '1.h'
        }
    }
}
